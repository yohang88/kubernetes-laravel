apiVersion: v1
kind: Service
metadata:
  name: laravel-app-service
spec:
  selector:
    app: laravel-app
  ports:
  - port: 80
  type: NodePort
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
    }
    http {
      server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # Set nginx to serve files from the shared volume!
        root /var/www/html/public;

        server_name _;

        index index.php;

        if (!-e $request_filename) {
          rewrite ^.*$ /index.php last;
        }

        location ~ \.php$ {
          include fastcgi_params;
          fastcgi_param REQUEST_METHOD $request_method;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_pass 127.0.0.1:9000;
        }
      }
    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: laravel-app
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: laravel-app
    spec:
      volumes:
        - name: shared-files
          emptyDir: {}
        - name: nginx-config-volume
          configMap:
            name: nginx-config
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - name: shared-files
              mountPath: /var/www/html
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
        - name: php-fpm
          image: yohang/php-laravel:latest
          volumeMounts:
            - name: shared-files
              mountPath: /var/www/html
          env:
            - name: APP_KEY
              value: "base64:cUPmwHx4LXa4Z25HhzFiWCf7TlQmSqnt98pnuiHmzgY="
            - name: DB_HOST
              value: laravel-mysql-service
            - name: DB_DATABASE
              value: "laravel_db"
            - name: DB_USERNAME
              value: "root"
            - name: DB_PASSWORD
              value: "mysqlpassword"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cp -r /application/. /var/www/html && cp /var/www/html/.env.example /var/www/html/.env && chmod -R 777 /var/www/html/storage"]